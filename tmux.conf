# ================================================
# TMUX->CONFIG ===================================
# ================================================

# ------------------------------------------------
# PREFIX -----------------------------------------
# ------------------------------------------------

# Set main prefix
set -g prefix C-n

# Ensure that we can send the prefix to other apps.
bind C-n send-prefix

# Free the original `Ctrl-b` prefix keybinding.
unbind C-b

# ------------------------------------------------
# RELOADING --------------------------------------
# ------------------------------------------------

# Reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ------------------------------------------------
# TERMINAL ---------------------------------------
# ------------------------------------------------
# Terminal type
set -g default-terminal "screen-256color"

# ------------------------------------------------
# GENERAL-OPTIONS --------------------------------
# ------------------------------------------------
set -sg escape-time 0

set -g mouse on

# Activity
set -g monitor-activity on
set -g visual-activity off

# Title
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# vi-style controls for copy mode
setw -g mode-keys vi

set -g focus-events on

# ------------------------------------------------
# WINDOWS ----------------------------------------
# ------------------------------------------------

setw -g window-status-current-format "#[bg=black,fg=colour46,bold] #I #[bg=brightgreen]#[fg=colour8]   "
setw -g window-status-current-format "#[bg=white,fg=colour93,bold]    #I    "
#setw -g window-status-format "#[bg=white,fg=colour238]    #I #[fg=colour238]#[bg=green]   "
setw -g window-status-format "#[bg=colour231,fg=colour8]    #I    "
setw -g window-status-attr reverse

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

# ------------------------------------------------
# PANES ------------------------------------------
# ------------------------------------------------

# Splitting panes
bind | split-window -h
bind \ split-window -h
bind - split-window -v
unbind '"'
unbind %

set-option -g mode-fg colour232
set-option -g mode-bg colour43

# ------------------------------------------------
# PANES->SELECTION -------------------------------
# ------------------------------------------------

# http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq nvim && tmux send-keys 'C-\\') || tmux select-pane -l"

# ------------------------------------------------
# STATUS->RIGHT ----------------------------------
# ------------------------------------------------
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

# ------------------------------------------------
# COLORS -----------------------------------------
# ------------------------------------------------

# default statusbar colors
set-option -g status-fg colour250
# FIX: SWITCH HERE
#set-option -g status-bg colour82
set-option -g status-bg colour234
set-option -g status-attr default

# default left statusbar colors
set-option -g status-left-fg colour250
set-option -g status-left-bg default
set-option -g status-left-attr default

# default right statusbar colors
set-option -g status-right-fg colour240
set-option -g status-right-bg default
set-option -g status-right-attr default

# window fg/bg
set -g window-style 'fg=colour248,bg=colour234'
set -g window-active-style 'fg=colour255,bg=black'

# border colours
set -g pane-border-fg colour237
set -g pane-border-bg colour234
set -g pane-active-border-fg colour237
set -g pane-active-border-bg colour234

# message text
set-option -g message-fg colour232
set-option -g message-bg colour32

# ------------------------------------------------
# ------------------------------------------------
# ------------------------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# ------------------------------------------------
# TMP->PLUGINS -----------------------------------
# ------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# vim-tmux-navigator
# ------------------------------------------------
#set -g @plugin 'christoomey/vim-tmux-navigator'

# https://github.com/christoomey/vim-tmux-navigator#restoring-clear-screen-c-l
bind C-l send-keys 'C-l'

# ------------------------------------------------
# TMP->INITIALIZE --------------------------------
# ------------------------------------------------
# If tpm is not found, clone it.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

