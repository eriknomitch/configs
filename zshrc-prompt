# ------------------------------------------------
# MANUAL -----------------------------------------
# ------------------------------------------------
setopt prompt_subst
autoload -Uz vcs_info
zstyle ':vcs_info:*' actionformats \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{10}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'

zstyle ':vcs_info:*' enable git

# or use pre_cmd, see man zshcontrib
vcs_info_wrapper() {
  vcs_info
  if [ -n "$vcs_info_msg_0_" ]; then
    echo "%{$fg[grey]%}${vcs_info_msg_0_}%{$reset_color%}$del"
  fi
}

PROMPT=$'[%{$fg_bold[white]%}$(pwd-is-wd-character)%{$reset_color%}]$(pwd-home-count)-> %{$_host_char%}%{$_prompt_color%}%m%{$reset_color%} $(vcs_info_wrapper)%{$_prompt_color%}$%{$reset_color%} '

# ------------------------------------------------
# PROMPTINIT -------------------------------------
# ------------------------------------------------
autoload -U promptinit
promptinit

# ------------------------------------------------
# PURE -------------------------------------------
# ------------------------------------------------
prompt pure

# ------------------------------------------------
# ------------------------------------------------
# ------------------------------------------------
# prompt spaceship

SPACESHIP_CHAR_PREFIX=" "
SPACESHIP_CHAR_SUFFIX=" "

SPACESHIP_USER_SHOW=false

SPACESHIP_RUBY_SHOW=false
SPACESHIP_NODE_SHOW=false

SPACESHIP_PROMPT_ORDER=(
  time          # Time stampts section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  hg            # Mercurial section (hg_branch  + hg_status)
  package       # Package version
  node          # Node.js section
  ruby          # Ruby section
  docker        # Docker section
  aws           # Amazon Web Services section
  venv          # virtualenv section
  conda         # conda virtualenv section
  pyenv         # Pyenv section
  kubecontext   # Kubectl context section
  exec_time     # Execution time
  line_sep      # Line break
  vi_mode       # Vi-mode indicator
  jobs          # Backgound jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)

